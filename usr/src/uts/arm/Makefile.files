#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2005 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#

#
# Copyright (c) 2006-2009 NEC Corporation
#


#
#	Core (unix) objects
#
CORE_OBJS +=		\
	archdep.o	\
	arm_netsubr.o	\
	arm_spl.o	\
	arm_string.o	\
	arm_subr.o	\
	bcmp.o		\
	boot_common.o	\
	cachectl.o	\
	cache_l220.o	\
	copy.o		\
	cpc_subr.o	\
	ddi_arch.o	\
	ddi_arm.o	\
	ddi_arm_asm.o	\
	exception.o	\
	fast_trap.o	\
	instr_size.o	\
	sys_trap.o	\
	fpu.o		\
	gic.o		\
	hat_arm.o	\
	hat_armpt.o	\
	hat_l1pt.o	\
	hat_kdi.o	\
	hat_switch.o	\
	hment.o		\
	lock_prim.o	\
	mode_setup.o	\
	polled_io.o	\
	sundep.o	\
	swtch.o		\
	sysarm.o	\
	toxic_range.o	\
	vm_dep.o	\
	vm_page_p.o	\
	xramdev_subr.o	\
	x_call.o

# Interrupt handler and ARM division helper routines should be linked
# as SPECIAL_OBJS.
SPECIAL_OBJS_32 +=	\
	interrupt.o	\
	divdi3.o	\
	divsi3.o	\
	moddi3.o	\
	ucmpdi2.o	\
	udivdi3.o	\
	qdivrem.o	\
	umoddi3.o

#
#	Generic-unix Module
#
GENUNIX_OBJS +=		\
	arch_kdi.o	\
	bitmap_arch.o	\
	getcontext.o	\
	install_utrap.o	\
	sendsig.o	\
	syscall.o

#
#	PROM Routines
#
GENUNIX_OBJS	+=	\
	prom_enter.o	\
	prom_exit.o	\
	prom_panic.o	\
	prom_env.o	\
	prom_emul.o	\
	prom_getchar.o	\
	prom_init.o	\
	prom_node.o	\
	prom_printf.o	\
	prom_prop.o	\
	prom_putchar.o	\
	prom_reboot.o	\
	prom_version.o

#
#	file system modules
#
CORE_OBJS +=		\
	prmachdep.o

CZFS_OBJS +=		\
	zfs_vfsops_arch.o

#
#	Driver modules
#
CMDK_OBJS +=	cmdk.o

CMLB_OBJS += cmlb.o cmlb_ext.o

GDA_OBJS +=	gda.o

SD_OBJS += sd.o sd_xbuf.o

STRATEGY_OBJS += strategy.o

VGATEXT_OBJS += vgatext.o vgasubr.o

SPRUN_OBJS += sprun.o

NVDRAM_OBJS	= nvdram.o

#
#	misc. modules
#
KRTLD_BOOT_OBJS +=	\
	kobj_boot.o

KRTLD_OBJS +=		\
	bootrd.o	\
	ufsops.o	\
	hsfs.o		\
	doreloc.o	\
	kobj_convrelstr.o \
	kobj_crt.o	\
	kobj_isa.o	\
	kobj_reloc.o

#
#	misc. modules
#
FBT_OBJS += fbt.o
SDT_OBJS += sdt.o

SWAPGENERIC_OBJS += swapgeneric.o

#
#	pcbe. modules
#
ARM11_PCBE_OBJS += arm11_pcbe.o

#
#	special files
#
MODSTUB_OBJ +=	 	\
	modstubs.o

BOOTDEV_OBJS +=		\
	bootdev.o

#
#	XRAMDISK for XRAMFS (MD part)
#
XRAMDISK_OBJS +=	\
	xramdisk_arch.o

PCICFG_OBJS += pcicfg.o

#
#	objects for kiconv base module
#
KICONV_OBJS	=	\
	u8_textprep.o	\
	uconv.o		\
	kiconv.o	\
	kiconv_mod.o

#
#	zmod objects
#
ZMOD_OBJS	= $(ZLIB_OBJS) zlib_mod.o

# If use cyclecount_log, let CYCLECOUNT be NULL.
CYCLECOUNT = $(POUND_SIGN)
#CYCLECOUNT =
$(CYCLECOUNT)CORE_OBJS += cyclecount.o cyclecount_subr.o

INC_PATH	+= -I$(UTSBASE)/arm
INC_PATH	+= $(EXTRA_ARM_INC_PATH)
