#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2007-2008 NEC Corporation
# All rights reserved.
#

{
    global:
	pthread_cond_reltimedwait_np;
	cond_reltimedwait;
	pthread_mutexattr_getrobust_np;
	pthread_mutexattr_setrobust_np;
	pthread_mutex_consistent_np;
	pthread_rwlockattr_getpshared;
	pthread_attr_setguardsize;
	pthread_rwlock_init;
	pwrite64;
	pthread_rwlock_wrlock;
	pthread_setconcurrency;
	getmsg;
	pthread_mutexattr_settype;
	putpmsg;
	lockf;
	lockf64;
	pthread_rwlockattr_setpshared;
	pthread_rwlock_unlock;
	msgrcv;
	sigpause;
	msgsnd;
	pread64;
	pthread_rwlockattr_init;
	poll;
	pthread_mutexattr_gettype;
	putmsg;
	pread;
	pthread_rwlock_tryrdlock;
	select;
	pwrite;
	usleep;
	getpmsg;
	pthread_rwlock_trywrlock;
	pthread_rwlock_destroy;
	wait3;
	readv;
	waitid;
	pthread_getconcurrency;
	pthread_rwlockattr_destroy;
	__xpg4_putmsg;
	pthread_attr_getguardsize;
	pthread_rwlock_rdlock;
	__xpg4_putpmsg;
	writev;
	creat64;
	open64;
	thr_keycreate;
	thr_keycreate_once;
	cond_timedwait;
	pthread_attr_getinheritsched;
	fcntl;
	pthread_exit;
	rw_tryrdlock;
	pthread_condattr_destroy;
	sigsuspend;
	pthread_attr_destroy;
	pthread_cond_signal;
	pthread_sigmask;
	pthread_setcanceltype;
	thr_setconcurrency;
	thr_kill;
	fork;
	cond_wait;
	pthread_attr_setschedparam;
	pthread_join;
	rw_trywrlock;
	pthread_mutexattr_setprotocol;
	fork1;
	pthread_attr_getdetachstate;
	pthread_mutexattr_getprioceiling;
	thr_main;
	pthread_condattr_getpshared;
	pthread_key_create;
	pthread_key_create_once_np;
	pthread_cond_init;
	pthread_key_delete;
	fsync;
	pthread_kill;
	rw_unlock;
	sigwait;
	pthread_attr_setinheritsched;
	thr_min_stack;
	msync;
	mutex_destroy;
	pthread_mutexattr_getpshared;
	rw_wrlock;
	pthread_attr_getschedpolicy;
	pthread_attr_init;
	pthread_cond_timedwait;
	pthread_mutexattr_init;
	pthread_setschedparam;
	thr_setspecific;
	tcdrain;
	open;
	pthread_condattr_setpshared;
	thr_self;
	mutex_init;
	rwlock_init;
	pthread_attr_setstacksize;
	waitpid;
	pthread_attr_setscope;
	pthread_getschedparam;
	pthread_mutex_init;
	pthread_setspecific;
	thr_setprio;
	pause;
	mutex_lock;
	pthread_attr_getschedparam;
	pthread_once;
	sema_post;
	pthread_mutexattr_setprioceiling;
	thr_continue;
	thr_sigsetmask;
	pthread_detach;
	mutex_trylock;
	pthread_attr_setschedpolicy;
	__pthread_cleanup_push;
	pthread_cond_wait;
	pthread_mutex_lock;
	pthread_testcancel;
	sigprocmask;
	pthread_self;
	sema_trywait;
	pthread_mutexattr_setpshared;
	thr_create;
	cond_broadcast;
	pthread_attr_setdetachstate;
	thr_stksegment;
	read;
	pthread_cancel;
	mutex_unlock;
	pthread_mutex_setprioceiling;
	sema_wait;
	pthread_condattr_init;
	pthread_mutex_trylock;
	thr_getconcurrency;
	thr_exit;
	cond_destroy;
	pthread_attr_setstackaddr;
	thr_suspend;
	pthread_create;
	sema_destroy;
	setitimer;
	_getfp;
	sigaction;
	pthread_mutex_getprioceiling;
	thr_getprio;
	cond_init;
	pthread_mutexattr_destroy;
	__pthread_cleanup_pop;
	pthread_cond_destroy;
	pthread_mutex_destroy;
	pthread_mutex_unlock;
	thr_getspecific;
	thr_yield;
	alarm;
	sleep;
	sema_init;
	pthread_attr_getstackaddr;
	siglongjmp;
	thr_join;
	close;
	wait;
	cond_signal;
	pthread_equal;
	rw_rdlock;
	pthread_attr_getstacksize;
	pthread_attr_getscope;
	pthread_cond_broadcast;
	pthread_getspecific;
	pthread_setcancelstate;
	sigsetjmp;
	creat;
	write;
	pthread_mutexattr_getprotocol;
	_mutex_lock;
	_mutex_unlock;
	_cond_reltimedwait;
	_pthread_condattr_init;
	_pthread_cond_signal;
	_thr_main;
	_pthread_join;
	_sema_wait;
	_pthread_attr_getdetachstate;
	_siglongjmp;
	_canceloff;
	_pthread_sigmask;
	_pthread_setcanceltype;
	_pthread_cond_timedwait;
	_rw_rdlock;
	_fork;
	_pthread_rwlockattr_getpshared;
	_pthread_cond_init;
	_pthread_rwlock_init;
	_thr_sigsetmask;
	_thr_min_stack;
	_pthread_once;
	_thr_continue;
	_pthread_condattr_destroy;
	_pthread_mutex_consistent_np;
	_setitimer;
	_fork1;
	_cancelon;
	_pthread_mutexattr_settype;
	_rw_tryrdlock;
	_pthread_attr_setinheritsched;
	_pthread_getschedparam;
	_pthread_attr_init;
	_pthread_equal;
	_thr_create;
	_sleep;
	_pthread_cond_broadcast;
	_pthread_mutex_destroy;
	_pthread_rwlock_rdlock;
	_thr_setconcurrency;
	_cond_init;
	_pthread_mutexattr_init;
	_rw_trywrlock;
	_alarm;
	_pthread_mutexattr_destroy;
	_pthread_mutex_setprioceiling;
	_pthread_exit;
	_thr_exit;
	_pthread_setspecific;
	_pthread_attr_destroy;
	_pthread_mutexattr_gettype;
	_cond_destroy;
	_pthread_attr_getinheritsched;
	_pthread_mutex_lock;
	_pthread_rwlock_wrlock;
	_thr_setspecific;
	_rw_unlock;
	_pthread_attr_setstacksize;
	_pthread_cond_reltimedwait_np;
	_pthread_kill;
	_thr_getprio;
	_resume;
	_pthread_attr_getstacksize;
	_pthread_mutexattr_setprioceiling;
	_cond_signal;
	_pthread_mutexattr_setpshared;
	thr_probe_setup;
	_pthread_key_create;
	_pthread_key_create_once_np;
	_pthread_attr_setscope;
	_pthread_mutex_getprioceiling;
	_thr_keycreate;
	_thr_keycreate_once;
	_rw_wrlock;
	_pthread_rwlock_destroy;
	_pthread_mutex_unlock;
	_pthread_rwlock_unlock;
	_pthread_self;
	_thr_join;
	_pthread_attr_setschedpolicy;
	_cond_wait;
	_pthread_attr_setguardsize;
	_thr_kill;
	_rwlock_init;
	_pthread_attr_setstackaddr;
	__thr_door_unbind;
	_pthread_setschedparam;
	_pthread_key_delete;
	_pthread_attr_getscope;
	_sigprocmask;
	_pthread_mutexattr_getpshared;
	_pthread_mutexattr_getprioceiling;
	_pthread_getconcurrency;
	_pthread_mutex_trylock;
	_thr_getspecific;
	_mutex_destroy;
	_pthread_rwlockattr_init;
	_thr_self;
	_sema_init;
	_pthread_attr_getschedpolicy;
	__sigtimedwait;
	_sigaction;
	__pthread_min_stack;
	_pthread_create;
	_pthread_cancel;
	_pthread_mutex_init;
	_pthread_attr_getguardsize;
	_mutex_init;
	_pthread_attr_getstackaddr;
	_pthread_cond_destroy;
	_cond_timedwait;
	_thr_setprio;
	_sema_destroy;
	_pthread_rwlock_trywrlock;
	_pthread_mutexattr_setprotocol;
	_pthread_condattr_getpshared;
	_sigwait;
	_resume_ret;
	_pthread_rwlockattr_setpshared;
	_pthread_mutexattr_setrobust_np;
	_pthread_rwlock_tryrdlock;
	_pthread_attr_setschedparam;
	_pthread_detach;
	_pthread_testcancel;
	_thr_suspend;
	_sema_post;
	_pthread_setconcurrency;
	_pthread_cond_wait;
	_thr_getconcurrency;
	_sigsuspend;
	_pthread_setcleanupinit;
	_pthread_attr_setdetachstate;
	_mutex_trylock;
	_pthread_condattr_setpshared;
	_thr_yield;
	_sema_trywait;
	_pthread_setcancelstate;
	_pthread_getspecific;
	_cond_broadcast;
	_pthread_rwlockattr_destroy;
	_sigsetjmp;
	_pthread_attr_getschedparam;
	_pthread_mutexattr_getrobust_np;
	_pthread_mutexattr_getprotocol;
	_thr_stksegment;
     local:
	*;
};

